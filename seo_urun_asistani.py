import streamlit as st
import pandas as pd
import openai
client = openai.OpenAI()
st.set_page_config(page_title="SEO ÃœrÃ¼n AÃ§Ä±klama AsistanÄ±", layout="wide")

st.title("ğŸ¦¾ Katia & Bony - SEO ÃœrÃ¼n BaÅŸlÄ±k & AÃ§Ä±klama AsistanÄ±")

st.markdown("""
KullanÄ±m:
1. ÃœrÃ¼nlerinizin olduÄŸu Excel dosyasÄ±nÄ± yÃ¼kleyin.
2. Her Ã¼rÃ¼n iÃ§in otomatik olarak SEO uyumlu baÅŸlÄ±k ve aÃ§Ä±klama oluÅŸturulsun.
3. Sonucu Excel olarak indirin!
---
**Excelâ€™de olmasÄ± gereken baÅŸlÄ±klar:**  
- `ÃœrÃ¼n AdÄ±`  
- `ÃœrÃ¼n AÃ§Ä±klamasÄ±` (varsa)  
- `Kategori` (varsa)  
""")

uploaded_file = st.file_uploader("Excel dosyanÄ±zÄ± yÃ¼kleyin", type=["xlsx"])

def gpt_urun_aciklama_baslik(urun_adi, urun_aciklama, kategori):
    prompt = f"""
AÅŸaÄŸÄ±daki bilgileri kullanarak SEO uyumlu, Ã¶zgÃ¼n ve etkili bir Ã¼rÃ¼n baÅŸlÄ±ÄŸÄ± ve aÃ§Ä±klamasÄ± oluÅŸtur:

ÃœrÃ¼n AdÄ±: {urun_adi}
ÃœrÃ¼n AÃ§Ä±klamasÄ±: {urun_aciklama}
Kategori: {kategori}

Kurallar:
- BaÅŸlÄ±k 70 karakteri aÅŸmasÄ±n, anahtar kelime ile baÅŸlasÄ±n.
- AÃ§Ä±klama 100-200 kelime arasÄ±nda, Ã¼rÃ¼nÃ¼n Ã¶ne Ã§Ä±kan Ã¶zellikleri ve faydalarÄ±nÄ± iÃ§ersin.
- CÃ¼mleler sade, aÃ§Ä±k ve ikna edici olsun.
- Ã–zgÃ¼n ve kopya olmayan bir metin Ã¼ret.
    """
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": prompt}],
            max_tokens=600
        )
        content = response.choices[0].message.content.strip().split("\n", 1)
        baslik = content[0].replace("BaÅŸlÄ±k:", "").strip() if len(content) > 0 else ""
        aciklama = content[1].replace("AÃ§Ä±klama:", "").strip() if len(content) > 1 else ""
        return baslik, aciklama
    except Exception as e:
        return "", f"HATA: {e}"

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    # Gerekli kolon kontrolÃ¼
    for col in ['ÃœrÃ¼n AdÄ±']:
        if col not in df.columns:
            st.error(f"Excel dosyasÄ±nda '{col}' kolonu eksik!")
            st.stop()
    if 'ÃœrÃ¼n AÃ§Ä±klamasÄ±' not in df.columns:
        df['ÃœrÃ¼n AÃ§Ä±klamasÄ±'] = ""
    if 'Kategori' not in df.columns:
        df['Kategori'] = ""

    st.write("Ä°lk 5 Ã¼rÃ¼n Ã¶rnek veri:", df.head())

    if st.button("SEO Ä°Ã§erikleri OluÅŸtur ve Ekle"):
        seo_basliklar = []
        seo_aciklamalar = []
        with st.spinner("ÃœrÃ¼nler iÅŸleniyor..."):
            for idx, row in df.iterrows():
                baslik, aciklama = gpt_urun_aciklama_baslik(
                    str(row['ÃœrÃ¼n AdÄ±']),
                    str(row.get('ÃœrÃ¼n AÃ§Ä±klamasÄ±', '')),
                    str(row.get('Kategori', ''))
                )
                seo_basliklar.append(baslik)
                seo_aciklamalar.append(aciklama)
        df['SEO BaÅŸlÄ±k'] = seo_basliklar
        df['SEO AÃ§Ä±klama'] = seo_aciklamalar

        st.success("ÃœrÃ¼nler baÅŸarÄ±yla iÅŸlendi! SonuÃ§larÄ± aÅŸaÄŸÄ±da inceleyebilir ve Excel olarak indirebilirsin.")
        st.dataframe(df[['ÃœrÃ¼n AdÄ±', 'SEO BaÅŸlÄ±k', 'SEO AÃ§Ä±klama']])

        # Excel indirme linki
        from io import BytesIO
        output = BytesIO()
        df.to_excel(output, index=False)
        output.seek(0)
        st.download_button("SonuÃ§larÄ± Excel olarak indir", data=output, file_name="seo_urunler.xlsx", mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
